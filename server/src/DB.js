const postTypes = [
	'headerText',
	'youtube',
	'paragraph',
	'image',
	'numberList',
	'pointList',
];

const createPost = (type, content) => {
	return { type, content };
}

const HT = (content) => { return createPost(postTypes[0], content); }
const YT = (content) => { return createPost(postTypes[1], content); }
const PR = (content) => { return createPost(postTypes[2], content); }
const IMG = (content) => { return createPost(postTypes[3], content); }
const NL = (content) => { return createPost(postTypes[4], content); }
const PL = (content) => { return createPost(postTypes[5], content); }

const DB = {
	trends: [],

	posts: [
		{
			id: 0, title: 'Ինչպե՞ս չդառնալ ծրագրավորող ', content: [
				HT('Ուղեցույց բացարձակ սկսնակների համար կամ 9 փաստ, որոնք խեղաթյուրված են ՏՏ կրթական սեգմենտում'),
				PR('Տեղեկատվական տեխնոլոգիաների ոլորտը միշտ գրավիչ է եղել սկսնակների համար։ Վերջին տարիներին աննախադեպ աճի արդյունքում գրավիչ են դարձել զանազան ծրագրավորման լեզուներն ու շատերը ձգտում են մուտք գործել ՏՏ ոլորտ՝ ամենահարմարավետ աշխատանքային պայմանները վայելելու համար՝ սկսած բարձր վարձատրությունից (երբեմն շուկայականից բազմակի շատ), վերջացրած բազմաթիվ արտոնություններով՝ ինչպիսիք են առողջական ապահովագրությունը, մարզասրահների անվճար կամ փոխհատուցված անդամակցությունը, զանազան միջոցառումներին ու կոնֆերանսներին մասնակցելը և այլն։'),
				YT('https://www.youtube.com/embed/APCtU5e3htk'),
				PR('Այս հոդվածում կփորձենք պարզաբանել, թե ինչպես բացարձակ սկսնակին դառնալ լավ, մրցունակ ծրագրավորող և վայելել բոլոր թվարկված առավելությունները։ Հոդվածը կսկսենք թվարկելով և ջախջախելով միֆերն ու սխալ մոտիվները, որոնք պարուրում են ՏՏ ոլորտը և երբեմն մոլորեցնում սկսնակներին։ Իհարկե, հոդվածում նաև նրբորեն ակնարկում ենք Picsart Academy-ի դերն ու էապես տարբերվող կրթական մոդելը։ Մինչդեռ դիմորդներն ուզում են արագ սովորել և մասնագիտանալ, մենք պնդում ենք դանդաղ և հիմնովին կրթվելու կարևորությունը։ Մինչդեռ ուսանողները կենտրոնանում են հավաստագրերի ու վկայականների վրա, մենք պնդում ենք գործնական փորձ ձեռք բերելու անհրաժեշտությունը։ Մինչդեռ ուսանողներն անհամբեր են, թե երբ կսկսվեն JavaScript-ի և React.js-ի դասերը, մենք առաջնահերթ ենք համարում համակարգչային ճարտարապետության, համակարգային ծրագրավորման, բազմահոսք ծրագրավորման, ցանցային ծրագրավորման, նախագծման հմտությունների, ալգորիթմների և Computer Science մի շարք այլ ենթաոլորտների ուսումնասիրության կարևորությունը։'),
				HT('Ծրագրավորումը հնարավոր է սովորել ինքնուրույն'),
				IMG('ինքնուրույն-սովորել-ծրագրավորում.png'),
				PR('Ընդհանրապես պարտադիր չէ հաճախել որևէ ուսումնական կենտրոն։ Համացանցում կան բազմաթիվ կրթական նյութեր, որոնք առավել քան բավարար են ինքնակրթման համար։ Կարևոր է միայն նպատակասլացությունն ու ճիշտ թեմաների հաջորդական ուսուցումը։ Ուսումնական կենտրոններն այդ գործում կարող են հանդիսանալ ուղեցույցներ, սակայն ընտրության հարցում սկսնակին բարդ է կողմնորոշվել, թե որ կրթական կենտրոնն է հնարավորինս համապատասխանում լավ ծրագրավորող կրթելու պահանջներին։ Իսկ ուսումնահետազոտական կենտրոնները (օրինակ՝ <a href="https://picsart.academy/" target="_blank">Picsart Academy</a>) բացի ուղեցույցից տրամադրում են նաև միջավայր, հետևողականություն և գործնական հմտություններ։'),
				HT('Ծրագրավորման լեզուն կարևոր չէ'),
				PR('Շատ բարդ է պայքարել ՏՏ ոլորտի կրթական սեգմենտում տիրող թյուրիմացությունների դեմ, ինչպես նաև բարդ է առաջ տանելը խորը ինժեներական կրթության կարևորությունը։ Մարդիկ սիրում են արագ արդյունքներ. դրան են նպաստում նաև մի քանի վայրկյանանոց հոլովակները, որոնք հեղեղել են սոցիալական հարթակները։ Ալարկոտությունը ստիպում է մեզ ընտրել 2 ամիս տևողությամբ դասընթացը՝ բարձր վարձատրվող աշխատանքի ակնկալիքով՝ ի վնաս երկարատև և տարիներ տևող հիմնովին կրթությանը։ Շատ հաճախ արագ արդյունքի ձգտողներն ընկնում են տարիներ տևող ցիկլի մեջ՝ չզարգանացնելով գիտելիքները, չստեղծագործելով, պորտֆոլիո չհավաքելով, այլ «անվերջ» աշխատանքի փնտրտուքների մեջ են, երբեմն ակնհայտ բողոքելով՝ սկսնակներին հնարավորություն «չընձեռող» ՏՏ ոլորտից։'),
				IMG('սկսնակ-ծրագրավորող.png'),
				PR('Սկսնակներին այս հարցում շատ է խանգարում շուկայի սխալ ուսումնասիրությունը, աշխատանքի հայտարարությունների սխալ ձևակերպումը և տարատեսակ «այս պահին պահանջված լեզուների ցանկերը» կամ դասակարգումներն ըստ օգտագործման։ Գաղտնիք չէ, որ Հայաստանում դոմինանտ է վեբ ոլորտը, ինչի արդյունքում սկսնակների համար քիչ գրավիչ են դառնում կամ հետին պլան մղվում համեմատաբար ավելի ինժեներական թեքումները (չիպերի նախագծում, խաղերի ծրագրավորում կամ ցանկացած ուղղություն, որը կպահանջի խորը գիտելիքներ, ինչպես նաև ցանկալի ֆիզիկամաթեմատիկական թեքում)։ Շուկայի սխալ ուսումնասիրությունն ու աշխատանքի հայտարարությունների սխալ ձևակերպումները հանգեցնում են սկսնակների մոտ թյուրըմբռման այս կամ այն կոնկրետ լեզվի կամ ֆրեյմվորկի հանդեպ առաջացնելով խիստ տրամադրվածություն։ Օրինակ՝ «պահանջվում է React.js ծրագրավորող» արտահայտության մեջ, «ծրագրավորող» բառին խորապես չվերաբերելով, սկսնակներն անմիջապես փնտրում են React.js դասընթացներ կամ կենտրոնանում հենց React.js ֆրեյմվորկի ուսումնասիրության վրա։ Մինչդեռ անհրաժեշտ են բավարար գիտելիքներ անմիջապես օպերացիոն համակարգի աշխատանքից, բազմահոսք ծրագրավորումից, միգուցե նույնիսկ ասեմբլերի իմացության թեկուզ քիչ, բայց բավարար մակարդակ, բրաուզերի աշխատանքի մասին լավ պատկերացում, ցանցային ծրագրավորման դետալների իմացություն, JavaScript-ի խորը գիտելիքներ, այդ թվում՝ engine-ի մասին բավարար պատկերացումներ։ Փոխարենը կենտրոնանում են հենց React.js ֆրեյմվորկի և պարզագույն մի քանի ուսումնական նախագծերի վրա։'),
				PR('Արդյունքում, նույնիսկ անցնելով աշխատանքի, շատ շուտ սկսնակը բախվում է իրականությանը, երբ կարիք է լինում օգտագործել Web Workers (բազմահոսք ծրագրավորման մասին պատկերացում չունենալով), Web Assembly (լեզվի տեսության, համակարգչային ճարտարապետության, ասեմբլերի բացակայող կամ ոչ բավարար իմացության ֆոնին), WebSockets (ցանցային ծրագրավորման դետալներ չիմանալով) և նմանատիպ բազմաթիվ օրինակներ, չթվարկելով ծրագրային ապահովման նախագծման սկզբունքներն ու շաբլոնները, որոնք ակամայից կիրառվում են ցանկացած համակարգում (բազմաչարչար SOLID-ներն ու Singleton, Factory-ները)։'),
				PR('Այսպես, բախվելով խնդիրների ու թեմաների, որոնց մասին առաջին անգամ պատկերացում է կազմում, սկսնակ ծրագրավորողն ապրում է իր առաջին մասնագիտական/ուսումնական շոկը։ Մինչդեռ նրան հավաստիացրել էին, որ JavaScript-ի սակավ իմացությամբ և React-ով որևէ նախագիծը բավարար է աշխատանք գտնելու համար: Իրական ինժեներական աշխարհում, անկախ նրանից ինչ ոլորտում ես, վեբ, մոբայլ, թե չիպերի նախագծում, այսպես թե այնպես բախվում ես անմիջապես Computer Science-ի գրեթե բոլոր ենթաոլորտներին։'),
				HT('Պետք չէ դառնալ ծրագրավորող միայն բարձր վարձատրվող աշխատանքի համար'),
				IMG('ծրագրավորող-բարձր-աշխատավարձ.png'),
				PR('Չնայած շատ ուսումնական կենտրոններ գովազդների առաջխաղացման համար փորձում են շահարկել ՏՏ ոլորտում բարձր (երբեմն՝ գերբարձր) աշխատավարձերն ու անհոգ կարիերան՝ իրական ինժեներ-ծրագրավորողի կայացման գործընթացում գումարը երբեք առաջնային մոտիվացիա չի եղել և չի կարող լինել։ Չսիրելով, խորապես չսուզվելով ծրագրավորման մեջ, չզգալով ստեղծագործական էությունը հնարավոր չէ կայանալ ոլորտում որպես մրցունակ մասնագետ։ Կան իհարկե դեպքեր, երբ մի քանի ամիս տևած դասընթացների մասնակցած ուսանողներ «կախարդական կերպով» կարողանում են գտնել իրենց առաջին աշխատանքը ոլորտում։ Բայց սրանք բացառիկ դեպքեր են, որոնք հախաճ մոլորեցնում են բացարձակ սկսնակներին ճիշտ որոշումներ կայացնելու գործում։ Տնտեսական ցանկացած ճգնաժամից կամ տատանումներից հետո սովորաբար տուժում են հենց այն ծրագրավորողները, որոնք բավարար խորությամբ չեն տիրապետում մասնագիտությանը (եթե հնարավոր է դա անվանել մասնագիտություն, այլ ոչ՝ արվեստ)։ Ճիշտ որոշումներ կայացնելը ենթադրում է խորությամբ տիրապետել ծրագրավորմանը՝ թաթախվելով անմիջապես համակարգչային գիտության մեջ, հմտանալով ծրագրավորման մեկ կամ մի քանի լեզուներում, տիրապետել գործիքակազմին, ունենալ գրավիչ պորտֆոլիո։ Այս է պատճառը, որ Picsart Academy-ում կրթական մոդելում ունենք <a href="https://picsart.academy/sandbox">Sandbox մեծ հատվածը</a>։'),
				HT('Ծրագրավորում սովորելը հեշտ չէ'),
				PR('Բացարձակ հեշտ չէ. շատ դեպքերում սկսնակները չեն պատկերացնում՝ ինչ մեծ ջանքեր են պահանջվում ծրագրավորման ոլորտ մուտք գործելու համար։ Դեռևս շատերին թվում է, թե, օրինակ մասնակցելով որևէ ուսումնական կենտրոնի դասընթացի, հնարավոր է մի քանի ամսում դառնալ լավ ծրագրավորող և միանգամից գտնել աշխատանք, ընդ որում՝ բարձր վարձատրվող։ Սա միֆ է, որն այնքան խորը արմատներ ունի շուկայում, որ դեռևս շատերը շահարկում են կարճատև դասընթացների կազմակերպումը՝ արագ արդյունքների հետևից վազող դիմորդներին բիզնես մոդելում ներգրավելու համար։ Սա իհարկե վատ չէ և նման ուսումնական կենտրոնների գոյությունը շուկայում արդարացված է, որովհետև միշտ կլինեն հաճախորդներ, որոնք հավատում են կախարդական դեղորայքին, որը խմելով հնարավոր կլինի դառնալ կինոյի հերոս։ Շատ դեպքերում նման հաճախորդի ժամանակի ու ֆինանսների սխալ ներդրումը դառնում է շատ լավ դաս՝ հետագա քայլերը ճիշտ կազմակերպելու համար։'),
				IMG('ծրագրավորող-դառնալ-հեշտ-չէ.png'),
				PR('Ծրագրավորում սովորելը հեշտ չէ, իսկ ծրագրավորումն ընդամենը մեկ համեմատաբար հանրահայտ ծրագրավորման լեզուն չէ։ Լեզուն բազմաթիվ գործիքներից մեկն է, որն օգտագործում են ծրագրավորողները առօրյա ստեղծագործական խնդիրները լուծելու համար։ Ծրագրավորման ամբողջ սպեկտրը ընկալելու և որպես մասնագետ կայանալու համար խիստ անհրաժեշտ է հենց Computer Science, ինչն էլ անդադար բարձրաձայնում ենք <a href="https://picsart.academy/">ակադեմիայում</a>:'),
				HT('Ավարտելով ուսումնական կենտրոնը դեռ պատրաստ չեք աշխատանքին'),
				IMG('ծրագրավորող-աշխատանք.png'),
				PR('Ծրագրավորման ոլորտը հագեցած է բազմաթիվ տեխնոլոգիաների, լեզուների, ֆրեյմվորկների օգտագործմամբ. այդ ամենի հետ մեկտեղ ՏՏ ընկերությունները շատ դեպքերում ունեն հստակ սահմանված աշխատանքային գործընթացներ և գործիքներ, որոնց տիրապետումն էլ ավելի կարագացնի սկսնակի մուտքը։ Շատ դեպքերում սկսնակները տիրապետում են ընդամենը մեկ լեզվի և հմտացել են պարզ ուսումնական խնդիրների լուծման մեջ, մինչդեռ աշխատավայրում անհրաժեշտ են մի շարք գործիքների իմացություն և հաճախ խորը գիտելիքներ ոլորտից կամ ենթաոլորտից, որոնց միջոցով ծրագրավորողը կկատարի աշխատանքային պարտականությունները։ Շատ դեպքերում սկսնակից պահանջում են նման գործիքների հետ գործնական հմտություններ ևս։ Այդ է պատճառը, որ ակադեմիայում անցկացնում ենք մոդուլներ Linux միջավայրում աշխատելու, git գործիքի հետ աշխատելու, build autoamtion-ի ընդհանուր պատկերացում ու կիրառական հմտություններ ունենալու համար։'),
				HT('Տնտեսական ճգնաժամերն ու շուկայական ցնցումները չեն ազդում լավ մասնագետների վրա'),
				IMG('տնտեսական-ճգնաժամ.png'),
				PR('Սա չգրված փաստ է. լավ մասնագետը միշտ պահանջված է։ Իհարկե, խոսքը չի գնում կրիտիկական ճգնաժամերի մասին, երբ ամբողջ աշխարհն է կանգնած մեծագույն խնդիրների, պատերազմների կամ այլմոլորակայինների հարձակման առջև։ Մնացած դեպքերում նույնիսկ ընթացիկ կարճատև (1–3 տարի) տևող ճգնաժամերը բացասական չեն անդրադառնում լավ մասնագետների վրա։ Լավ մասնագետ ասվածը կսահմանենք որպես մասնագետ, ով իր առջև դրված խնդիրները լուծում է անկախ համացանցում դրանց առկայությունից։ Ով ի վիճակի ստեղծագործել, փնտրել զանազան գրքերում, կապել մի քանի դրույթներ միմյանց հետ, փորձարկումներ անել ու դուրս բերել ամենայուրահատուկ լուծումները։'),
				HT('Աշխատանքի հարցազրույցներում կարևորվում է հիմունքային կրթությունը'),
				PR('Հարցազրուցավարներից շատերին հետաքրքիր չէ JavaScript-ի, Python-ի կամ նույնիսկ C++-ի խիստ նեղ ֆունկցիոնալի նկարագրությունն ու աշխատանքի նրբությունները։ Իհարկե, չենք բացառում ծրագրավորման լեզվի հոյակապ իմացությունը, բայց առավելապես կարևորվում է հենց հիմունքային կրթությունը, ալգորիթմական մտածելակերպը, խնդիրներին էֆեկտիվ լուծումներ տալու կարողությունները, համակարգչային համակարգերի ցածր մակարդակի աշխատանքի դետալները։ Սրանք գիտելիքներ ու հմտություններ են, որոնք երկար տարիներ կծառայեն ձեզ, իսկ արդեն ծրագրավորման նոր լեզուներ, ֆրեյմվորկներ ու գրադարաններ հնարավոր է սովորել անմիջապես աշխատավայրում։ Շատ ծրագրավորողներ նույնիսկ օգտագործում են այլ ծրագրավորման լեզուներ նոր աշխատավայրում։ Դուք կարող եք ծրագրավորել C++-ով երկար տարիներ, բայց անցում կատարեք Java-ին՝ կախված գործատուից կամ նոր նախագծից։ Հենց անցում կատարելու ճկունությունն է ձեզ առանձնացնելու ոչ այնքան լավ մասնագետներից։ Փոխարինելի մասնագետները կառչում են կոնկրետ լեզվին կամ ֆրեյմվորկին, մինչդեռ լավագույն մասնագետներն ունեն ամուր հիմունքային կրթություն՝ անմիջապես համակարգչային գիտությունից (Computer Science), իսկ կիրառական տեխնոլոգիաներն ադապտացնում են ըստ անհրաժեշտության։'),
				HT('Համալսարանական դիպլոմը կարևոր է, բայց պարտադիր չէ'),
				IMG('դիպլոմ-համալսարան.png'),
				PR('Շատ ՏՏ ընկերություններ դեռևս կարևորում են բարձրագրույն ուսումնական հաստատության դիպլոմը։ Ցանկալի է դիմորդը լինի ԲՈՒՀ-ի ուսանող կամ շրջանավարտ։ Այդ կերպ ընկերությունը վստահ է, որ դիմորդը կունենա այն բազային գիտելիքները, որոնք կարևոր են։ Գործատուի համար շատ ավելի կարևոր է աշխատանքի թեկնածուն ի վիճակի լինի տալ ստեղծագործական լուծումներ խնդիրներին, քան JavaScript-ի reduce() ֆունկցիայի ամբողջական շարահյուսությունն իմանալը։ Նույնիսկ եթե լեզուն գիտեք շատ լավ, դա չի նշանակում, որ կկիրառեք այն ճիշտ։ Այս է պատճառը, որ որոշ գործատուներ դեռևս կարևորում են համալսարանական դիպլոմը (հենց ոլորտին առնչվող), սակայն սա չի բացառում լինել ինքնուս, ու, չունենալով համապատասխան դիպլոմ, այնուամենայնիվ սովորել հենց հիմունքային թեմաները Computer Science-ից։ Բարեբախտաբար համացանցում անսպառ ռեսուրսները տալիս են բոլոր հնարավորությունները ճիշտ ինժեներական կրթություն ստանալու, իսկ եթե ձեզ անհրաժեշտ է պլանավորված ուսումնական պլան և խիստ վերահսկողություն, ապա իհարկե, կարող եք ընտրել հենց խորը ինժեներական կրթության վրա շեշտ դնող ուսումնահետազոտական կենտրոններ, օրինակ՝ <a href="https://picsart.academy/">Picsart Academy</a>։'),
				HT('JavaScript-ով անօդաչու չես ծրագրավորի'),
				IMG('javascript-անօդաչու.png'),
				PR('Չնայած JavaScript-ն էլ Python-ն էլ վերջերս ամենատարածված ծրագրավորման լեզուներից են, միևնույնն է կա հսկա խնդիրների բազմություն, որոնք լուծելու համար ծրագրավորողը ստիպված է իջնել ավելի ցածր մակարդակ։'),
				PR('Շատ դեպքերում իրական ինժեներ-ծրագրավորողը պետք է ի վիճակի լինի հստակ պատկերացնել, թե ինչպես են աշխատում համակարգչային համակարգերը, ինչպես է կառուցված և ինչ գործառույթներ ունի օպերացիոն համակարգը, ինչպես կիրառել էֆեկտիվ տվյալների կառուցվածքներ և ալգորիթմներ խնդիրների լուծման համար։ Սրանք և շատ նմանատիպ թեմաներ հաճախ բաց են թողնվում սկսնակների կողմից, որովհետև որոշ դեպքերում ձանձրալի են կամ բարդ, իսկ բարդ կամ ձանձրալի թեմաները չեն ապահովում բազմաթիվ «լայքեր» և «դիտումներ» համացանցում, հետևաբար նյութերի ստեղծողները ևս աչքաթող են անում կարևորագույն թեմաները և սկսնակները ՏՏ ոլորտին ծանոթանում են մեծամասամբ սխալ աղբյուրներից, որոնք պնդում են, որ ծրագրավորող կարող են դառնալ բոլորը. բավական է 2 ամիս ծախսել այս պահին հանրաճանաչ որևէ լեզվի վրա, օրինակ՝ JavaScript։ Այսպես, շուկան գերլցվում է բազմաթիվ թերուս coder-ներով, որոնք տիրապետում են JavaScript-ի բազային շարահյուսությանն ու փնտրում են աշխատանք։ Պարզապես այս սկսնակներն ընդամենը տեղեկատվության խիստ պակաս ունեն և չգիտեն, թե ինչ է իրականում ծրագրավորումը և ինչու է կարևոր հենց Computer Science-ը։ Անկախ ամեն ինչից, սկսնակները բախվելու են Computer Science-ի կիրառական կարևորությանը հենց աշխատավայրում։ Այս և այլ հարցերի շուրջ երկար մտորումների արդյունքն է Picsart Academy-ի մեծ կրթական մոդելը, որը բավարարում է սկսնակներին և փորձառուներին՝ անմիջապես կենտրոնանալով հենց խորքային ինժեներական կրթության բացերի վրա։'),
				PR('Ընթացակարգը բավական պարզ է, ակադեմիայում կսովորեն ուսանողները, որոնք երկարատև հիմունքային կրթության ջատագով են ու պատրաստ են քրտանաջան աշխատել և ներդնել իրենց ամբողջ ներուժը որակյալ կրթություն ստանալու գործում։'),
			]
		},
		{
			id: 1, title: 'Ինչպե՞ս սովորել ծրագրավորում ', content: [
				HT('Քայլերի հաջորդականություն բացարձակ սկսնակների համար'),
				PR('Ծրագրավորում սովորելը հեշտ չէ։ Սկսնակները սովորաբար մոլորվում են բազմատեսակ աշխատանքի հայտարարությունների տեքստերը կարդալուց, ծանոթ ծրագրավորողներին հարցուփորձ անելուց և շատ դեպքերում բարդ է կողմնորոշվելը, թե ինչպես սկսել կամ ինչից։ Ոմանք խորհուրդ են տալիս վեբն ու JavaScript-ը, ոմանք` Python-ը, այլք՝ C# և այլն և այլն։ Շատ դեպքերում խորհուրդները հիմնվում են կա՜մ շուկայում վերջին զարգացումների, կա՜մ կազմակերպություների թարմ հայտարարությունների վրա, ենթադրելով, որ կա պահանջարկ նշված լեզվից, ապա ծրագրավորող դառնալու համար անհրաժեշտ է սովորել տվյալ լեզուն։'),
				IMG('ինչպես-սովորել-ծրագրավորում.png'),
				PR('Ոչ բոլոր, բայց շատ դեպքերում աշխատանքի հայտարարությունները թերի են ձևակերպման մեջ. օրինակ՝ նշում են «պահանջվում է Java ծրագրավորող», ինչը ավելի հստակ պետք է ձևակերպել որպես «պահանջվում է ինժեներ-ծրագրավորող, ով ունի նաև Java լեզվի կիրառական փորձ»։ Սխալ է կոնկրետ լեզուն կապել հենց «ծրագրավորող»-ին, բայց սա արմատական ընկալման խնդիր է, որն այսօր դեռևս անլուծելի է ՏՏ սեգմենտում։'),
				YT('https://www.youtube.com/embed/RyDckCn28Yc'),
				PR('Բացարձակ սկսնակների համար երբեմն ընդհանրապես պարզ չէ, թե ինչ տարբերություններ կան այդ զանազան լեզուների միջև, ինչու է համացանցը լեփ- լեցուն հենց HTML/CSS/JavaScript դասերով և ինչպես գնահատել մասնագիտական պահանջարկը։ Բացի դա, կան սկսնակներ, որոնք ոգեշնչված են ինչ-որ պատմությունով, ֆիլմով կամ կերպարով և որոշել են իրենց կարիերան ուղղել դեպի ծրագրավորում։ Նման դեպքերում չեն պակասում հենց hacker դառնալու ռոմանտիկ տրամադրվածությամբ սկսնակները, որոնք որևէ հնարքով ուզում են հնարավորինս արագ սուզվել այդ կախարդական բիթերի ու բայթերի աշխարհ։'),
				PR('Շատ կարևոր է պատկերացնել, որ կոդ գրելը և ծրագրավորումը բնույթով նույնը չեն։ Կոդ գրում են բոլորը՝ օգտագործելով հայերենը որպես լեզու։ Ցանկացած ժամանակ, երբ որևէ մեկը տեքստ է հավաքում որևէ լեզվով, օրինակ՝ հայերեն, կարելի է պնդել, որ նա գրում է կոդ։ Այնպես ինչպես մարդն է ընկալում հայերենով գրված տեքստը, կարող եք պատկերացնել, որ համակարգիչն էլ նմանապես (վերապահումով) ընկալում է իրեն հասկանալի լեզվով գրված կոդը։ Ծրագրավորման ենթատեքստում մարդու խնդիրը համակարգչի հետ «լեզու գտնելն է»։ Այս թեմայով ունենք <a href="https://www.youtube.com/playlist?list=PLBzxnGCN6T8ddhTt0jk_bGnhmj4r16enC" target="_blank">Հայկ Դարբինյանի հրաշալի լեկցիաների տեսադարանը</a>, որտեղ մանրամասն նկարագրվում է համակարգչի ու համակարգչային համակարգերի ներքին կառուցվածքն ու կազմակերպումը։'),
				YT('https://www.youtube.com/embed/PwxxCFBKPPQ?list=PLBzxnGCN6T8ddhTt0jk_bGnhmj4r16enC'),
				PR('Դասերի ընթացքում նաև հստակեցվում են հենց ծրագրավորողի ու համակարգչի «շփման» եզրերը։ Ինչպես օրինակ մենք հայերենին չտիրապետող արտասահմանցի կոլեգայի համար ստիպված ենք թարգմանել մեր մտադրությունները, նույն կերպ ծրագրավորողը ստիպված է թարգմանել իր մտադրությունները համակարգչի համար։'),
				PR('Պատկերացրեք՝ դուք ուզում եք դառնալ բժիշկ և ֆրանսերեն չգիտեք, բայց ձեզ հրավիրել են դասախոսություն կարդալու Ֆրանսիայում՝ բժշկության մասին։ Ժամանակը քիչ է և հասցրել եք սովորել միայն ֆրանսերեն, այն էլ ոչ այնքան վարժ։ Գնալով դասախոսություն կարդալու՝ դուք ընդհանրապես բժշկության մասին չեք պատմի ոչինչ, բայց կարևորը տիրապետում եք ֆրանսերենին բավարար մակարդակով, միգուցե դա կօգնի արդարանալ բշկության մասին դասախոսությունը ձախողելու հարցում։ Դույզն-ինչ կոպիտ է, բայց վերապահումով շատ նման է նաև ծրագրավորման և ծրագրավորման լեզվի համեմատությանը։ Պատկերացրեք ֆրանսերենի փոխարեն JavaScript, իսկ բժշկության փոխարեն՝ ծրագրավորումը, իսկ ավելի լայնիմաստ ու ընդգրկուն կլինի ասել՝ համակարգչային գիտությունը (computer science)։ Նույնիսկ եթե տիրապետեք JavaScript-ին շատ լավ, միևնույն է, համակարգչային գիտության գիտելիքների պակասը կամ բացակայությունը ձեզ հնարավորություն չի տա ծրագրավորել ու ստեղծագործել համակարգչային ծրագրավորման ենթատեքստում։'),
				PR('Կոդ գրելու համար սկսնակին ընդամենն անհրաժեշտ է ծանոթանալ որևէ լեզվի սինտաքսիսին (շարահյուսությանը) և փորձել աբստրակտ մտածելակերպի շնորհիվ տրամաբանել կոդի աշխատանքի սկզբունքները։ Շատ գրքերում կամ տեսադասերում հանդիպում ենք առաջնային պարզ ներածությանը, օրինակ, ինչպես JavaScript-ով գրել ծրագիր, որն էկրանին կարտածի հանրահայտ “Hello, world!” արտահայտությունը։ Այնուհետև նյութի ուսումնասիրությունը գնում է դեպի տվյալների տիպեր, պայմանի ստուգում, ցիկլեր, ֆունկցիաներ, տվյալների աբստրակցիա և այլն։'),
				PR('Առաջին բախումն իրականության հետ տեղի է ունենում հարցազրույցի ժամանակ, երբ հարցազրուցավարները սկսում են անհասկանալի թվացող հարցեր տալ, օրինակ, «ինչ է SOLID-ը», «ինչ տարբերություն ագրեգացիայի և կոմպոզիցիայի միջև», «ինչու է JavaScript-ը միահոսք (single-threaded)», «ինչու և երբ օգտագործել կապակցված ցուցակ» և այլն։ Շատ դեպքերում հարցազրույցի արդյունքում սկսնակի մոտ ստեղծվում է տպավորություն, որ կամ սկսնակներին հնարավորություն չեն տալիս սկսել պրակտիկա, կամ ծրագրավորման մասին սխալ պատկերացումներ ու գիտելիքներ ունի, ինչն էլ վերջին հաշվով կամ ԲՈՒՀ-ի կամ ուսումնական կենտրոնի կամ YouTube-ի տեսադասերի վրա է բարդվելու։'),
				PR('Ինչպե՞ս սովորել ծրագրավորում, կամ որ ավելի կարևոր է՝ ինչ սովորել ծրագրավորումից, առնվազն այնքան որքան որ անհրաժեշտ է գտնել սկսնակին համապատասխանող աշխատանք։'),
				PR('Հարցին պատասխանելու համար՝ դիտարկենք այլ տեսանկյունից։ Ի՞նչ խնդիրներ է լուծում ծրագրավորողը։ Ծրագրավորումը համակարգչային համակարգերին շունչ տալու գործընթացն է, կամ այլ կերպ՝ ավտոմատացումը։ Ունենք համակարգ բաղկացած միկրոպրոցեսորից, հիշողության սարքից, բազմաթիվ կապող օղակներից և անհրաժեշտ է հրահանգների հստակ հաջորդականությամբ նկարագրել միկրոպրոցեսորի կողմից կատարվելիք գործողություններն այնպես, ինչպես բաղադրատոմսում նկարագրվում է որևէ համեղ բան թխելու գործընթացը՝ խոհարարի համար։ Ծրագրավորողի առջև դրված խնդիրների բազմազանությունն այնքան մեծ է, որ ավելի հեշտ է բերել կոնկրետ ծրագրերի օրինակներ։'),
				PR('Դիտարկենք ծրագրեր/ծառայություններ, որոնք օգտագործում ենք առօրյայում, Telegram, Web browser, Text editor և այլն։ Մեզ հանդիպող ծրագրերի մեծ մասն ունի բազմաթիվ բաղադրիչներ։ Ցանկացած վեբ բրաուզեր, օրինակ՝ Google Chrome-ը, ունի մի շարք գործառույթներ։ Ցանցի միջոցով հաղորդակցվելով այլ համակարգիչների հետ՝ բրաուզերը տեքստից, նկարներից և այլ ռեսուրսներից բաղկացած բովանդակությունը ցուցադրում է մեզ վեբ կայքի էջերի տեսքով։'),
				PR('Պատկերացրեք՝ որպես ծրագրավորող ստանում եք նմանատիպ առաջադրանք. ստեղծել վեբ բրաուզեր։ Ձեզ այստեղ պետք կգան գիտելիքներ համակարգչային գիտության (Computer Science) այնպիսի ենթաոլորտներից՝ ինչպիսիք են լեզուների տեսությունը, համակարգչային ցանցերը, օպերացիոն համակարգերը և այլն։'),
				PR('Ի վերջո, ստեղծելով վեբ բրաուզեր, ձեզ հարկավոր է ստեղծել գրաֆիկական ինտերֆեյս ունեցող ծրագիր, որը ցանկալի է աշխատի բոլոր հայտնի օպերացիոն համակարգերի վրա, ծրագրի միջոցով անհրաժեշտ է ցանցային հաղորդակցություն ապահովել բազմաթիվ սերվերների հետ, որոնցից ստացված բովանդակությունը, բաղկացած զանազան ֆորմատներից, անհրաժեշտ է մշակել և ցուցադրել էկրանին։ Միաժամանակ, այդ ամբողջն անհրաժեշտ է կազմակերպել հնարավորինս արագ, որպեսզի ձեր բրաուզերի օգտագործողները չդժգոհեն արագագործությունից։'),
				PR('Իհարկե հնարավոր չէ կամ գերբարդ խնդիր է միանգամից ամբողջը սովորելը և կիրառելը, փոխարենը փորձեք տրամադրվել ճիշտ հերթականությամբ սովորելուն։ Այսպես, եթե բացարձակ սկսնակ եք և սրանք ձեր առաջին քայլերն են դեպի ծրագրավորում, ապա առայժմ ընդունելի է հնարավորինս պարզ տարբերակով մուտք գործել ընդհանուր ոլորտ, այն է՝ օգտվել ստանդարտ համատարած հասանելի ռեսուրսներից։ Հայալեզու նյութերը ևս սկսել են շատանալ, օրինակ՝ հենց <a href="https://picsart.academy/">Picsart Academy-ի</a> <a href="https://www.youtube.com/c/CodeRepublic">YouTube-յան ալիքում</a> օրեցօր շատանում են տեսադասերը՝ նախատեսված բացարձակ սկսնակների համար։ Ստորև կփորձենք տրամադրել հստակ քայլերի հաջորդականություն, որոնց կատարումը ձեզ կօգնի շատ ավելի դյուրին ու ուղղորդված մուտք գործել ծրագրավորման աշխարհ՝ ընթացքում չձանձրանալով խորը ինժեներական թեմաներից։'),
				HT('Քայլերի հաջորդականությունը'),
				IMG('ծրագրավորում-սովորելու-քայլերի-հաջորդականություն.png'),
				PR('Ընդհանուր ընթացակարգը մոտավոր ունի հետևյալ տեսքը.'),
				NL([
					'Շատ արագ ծանոթանալ համակարգչային գիտության ոլորտների ու ենթաոլորտների հետ։',
					'Շատ արագ ծանոթանալ ծրագրավորման լեզուների ու դրանց կիրառությունների հետ։',
					'Տեսնել տարբեր ծրագրավորման լեզուներով պարզագույն ծրագրի կոդի օրինակներ։',
					'Ծանոթանալ կոմպիլյատոր, ինտերպրետատոր և վիրտուալ մեքենա հասկացությունների հետ։',
					'Ընտրել որևէ ծրագրավորման լեզու, որը սկսնակի համար հնարավորինս հեշտ կլինի, օրինակ՝ Python կամ JavaScript։ Գրել պարզագույն ծրագրեր ընտրած լեզվով այնպես, որ հնարավոր լինի դրանք աշխատեցնել և տեսնել արդյունքները։',
					'Սովորել փոփոխականներ հայտարարել, մուտքագրել և արտածել արժեքներ։',
					'Սովորել պայմանական գործողություններ կատարել։',
					'Սովորել ցիկլերը և ծանոթանալ ավելի բարդ տվյալների տիպերի հետ, մասնավորապես սկսել կիրառել զանգվածներ։',
					'Այս կետից ձեզ արդեն պետք է սկսել նորից, բայց արդեն համակարգչային գիտության ենթատեքստում։ Շատ կարևոր է սկսել պատկերացնելը, թե ինչպես են աշխատում համակարգչային համակարգերը ցածր մակարդակում։ Այդ հարցում ամենաօգտակար գրքերից է Code գիրքը, հեղինակ՝ Charles Petzold։',
					'Code գրքի ընթերցումից հետո ընտրեք ավելի բարդ լեզու, ցանկալի է ընտրել C-ն կամ C++-ը։ Սկսեք ուսումնասիրել այն ամենն ինչ կատարել եք 1-8 քայլերում C/C++ լեզվով։',
					'Ծանոթացեք ֆունկցիաներին, փորձեք իրականացնել այն ինչ մինչև այս կետը իրականացրել եք՝ օգտագործելով ֆունկցիաներ։',
					'Ծանոթացեք ցուցիչներին, հասկացեք, թե ինչպես օգտվել հիշողությունից։ Հասկացեք, թե ինչ տարբերություն կա հիշողության սեգմենտների միջև, օրինակ՝ stack և heap։',
					'Ծանոթացեք ռեկուրսիային և արդեն ժամանակն է սկսել մտածել խնդիրների էֆեկտիվ լուծումներ գտնելու մասին։ Այդ գործում սկսնակներին շատ օգտակար է Carrano-ի «Data Abstraction and Problem Solving with C++» գիրքը։ Կարդացեք այն ամբողջությամբ, բայց ցանկալի է ծանոթանալ աբստրակցիաների մեխանիզմներին, մասնավորապես՝ կլասներին։',
					'Կարդացեք Professional C++ գիրքը՝ որպես լավագույն ներածություն դեպի օբյեկտ-կողմնորոշված C++ և շատ այլ դետալներ, որոնք կիրառելի են ծրագրավորողների համար։ Կարելի է զուգահեռացնել գործընթացն ու Professional C++ և Carrano-ի Data Abstraction and Problem Solving with C++ գրքերը կարդալ միասին։',
					'Նախորդ քայլերի հետ համատեղ շատ ավելի օգտակար է սկսել լուծել խնդիրներ այնպիսի հարթակներում, ինչպես օրինակ՝ leetcode.com, codesignal.com, codeforces.com և այլն։',
					'Ժամանակն է ավելի սուզվել համակարգչային համակարգերի, դրանց ներքին կառուցվածքի և ցածր մակարդակի դետալների մեջ։ Լավագույն գիրքը այս ենթատեքստում Bryant-ի Computer Systems գիրքն է։ Սա այնքան լավ գիրք է, որ ցանկալի է կարդալ մի քանի անգամ։',
					'Այս կետում ձեզ արդեն կանգնեցնելը դժվար է, բայց դեռևս ցանկալի է աչքաթող չանել բարձր մակարդակն ու վերադառնալ ավելի աբտրակտ հասկացություններին, ինչպիսիք են կոդի ճարտարապետությունը, նախագծման շաբլոնները, օբյեկտ-կողմնորոշված վերլուծությունը, ծրագրային ապահովման նախագծման սկզբունքները։ Այս հարցում կան բազմաթիվ լավ գրքեր, որոնք խիստ կարևոր է ընթերցել և հետևել խորհուրդներին։ Հաջորդիվ տրված է նախընտրելի հերթականությունը։',
					'Կարդացեք Scott Meyers-ի C++ բոլոր գրքերը։',
					'Այս կետում ցանկալի է ընդհանուր աշխարհայացքը ավելի լայնացնել այլ ծրագրավորման լեզուներ ևս դիտարկելով։ Փորձեք կարդալ Herbert Schildt-ի "Java. The Complete Reference" գիրքը։',
					'Օբյեկտ-կողմնորոշված վերլուծության և նախագծման հարցում լավ գրքերից է Grady Booch-ի "Object-Oriented Analysis and Design" գիրքը։',
					'Նախագծման շաբլոններին նախքան ծանոթանալը ցանկալի է սկսել ինքնուրույն իրականացնել որևէ նախագիծ, օրինակ՝ նախագծել և իրականացնել շախմատի ծրագիր, որը հնարավորություն կտա ձեզ և ձեր ընկերներին միմյանց հետ խաղալ շախմատ։ Ծրագիրն իրականցրեք այնպես, որ հնարավոր լինի խաղալ հեռավար՝ ցանցի միջոցով։ Այստեղ ստիպված կկիրառեք ցանցային ծրագրավորման ձեր գիտելիքները ևս։',
					'Ծրագրի իրականացումից հետո ցանկալի է կարդալ նախագծման շաբլոնների մասին գիրք՝ մասնավորապես ստանդարտ գրականությունից է "Design Patterns: Elements of Reusable Object-Oriented Software" գիրքը։',
					'Շատերը սիրում են նաև Robert Martin-ի "Clean Architecture" և "Clean Code" գրքերը, որոնք իհարկե, մենք ևս չենք բացառի, սակայն կարևոր է այս ուղղվածությամբ կարդալ դասականներից Steve McConnel, "Code Complete"։',
					'Վերջում, ծանոթանալով նաև ծրագրավորման գործընթացում օգտագործվող գործիքակազմին, օրինակ՝ git, պետք է նաև վարժ աշխատանքային հմտություններ ձեռք բերել Linux միջավայրում։ Հավանաբար ապագա աշխատավայրում կիրառական օպերացիոն համակարգերից կլինի հենց Linux-ը։',
					'Այս կետում արդեն պատրաստ եք հանգիստ խղճով փնտրել աշխատանք՝ չդադարելով սովորել։',
				]),
				PR('Վերոնշյալ քայլերի հաջորդականությունը շատերին կարող է թվալ շատ կամ ուռճացված։ Բազմաթիվ կրթական կենտրոններ շեշտադրում են նշված քայլերից մեկը կամ առավելագույնը երկուսը՝ այն է, իմանալ որևէ ծրագրավորման լեզու և սկսել փնտրել աշխատանք։ Հենց դա է բերում թյուրիմացության և գործատուները սկսում են վատաբանել սկսնակներին՝ թերի ինժեներական կրթության և ուսումնական կենտրոնների սխալ դիրքավորման համար։ Չնայած, դուք կարող եք ականատես լինել բացառիկ դեպքերի, երբ կարճ ժամանակում որևէ ծրագրավորման լեզու կամ ֆրեյմվորկ սովորելուց հետո հատուկենտ սկսնակներին է հաջողվում տեղավորվել աշխատանքի, այնուամենայնիվ, երկար դիտարկված տեսանկյունից թերի ուսումը բերում է լուրջ հետևանքների, որոնցից են՝ տնտեսական ցնցումների արդյունքում հնարավոր կրճատումները, տարիներ անց նույն աշխատավայրում միանման նախագծերի վրա աշխատելը, մասնագիտական աճի կանգը և այլն։'),
				PR('Ավելի լավ է ուշ աշխատել, բայց ունենալ ամուր և խորը հիմունքային կրթություն, քան շտապել և դառնալ փոխարինելի մասնագետ։ Եթե դժվարանում եք ինքնուրույն հետևել նշված քայլերին, ապա կարող եք միանշանակ ընտրել ուսումնահետազոտական կենտրոններ, որոնք հենց մասնագիտանում են խորը ինժեներական կրթության և անփոխարինելի ինժեներ-ծրագրավորողներ կրթելու գործում։ Իհարկե, խոսքը վերաբերում է <a href="https://picsart.academy/">Picsart Academy-ին</a> և նմանատիպ կենտրոններին։'),
			]
		},
		{
			id: 2, title: 'Ծրագրավորման մասնագիտացումները. Frontend վեբ ծրագրավորում, Backend վեբ ծրագրավորում, Android և iOS ծրագրավորում', content: [
				HT('Frontend վեբ ծրագրավորում, Backend վեբ ծրագրավորում, Android հավելվածների ծրագրավորում, iOS հավելվածների ծրագրավորում և այլն. Ի՞նչ ընտրել սկսնակին'),
				PR('Հաճախ սկսնակները դժվարանում են կողմնորոշվել ծրագրավորման աշխարհում կոնկրետ ենթամասնագիտացման ընտրության հարցում։ Շատ դեպքերում կողմնորոշվելու հարցում օգնում են կամ խանգարում ծանոթ մասնագետները, ովքեր արդեն աշխատում են որևէ ՏՏ ընկերությունում և և ուղղորդում են ընտրել հենց իրենց մասնագիտացումը։'),
				YT('https://www.youtube.com/embed/l83bPkHmu6g'),
				PR('Լինի դա frontend վեբ ծրագրավորումը, թե Android հավելվածների մշակումը, սկսնակները բախվում են անմիջապես բազմաթիվ «խորհուրդների» այս կամ այն ծրագրավորման լեզվի, ֆրեյմվորկի և ենթամասնագիտացման հարցում։ Երբեմն սխալ «խորհուրդները» գալիս են՝ ինքնուրույն շուկան վերլուծելու արդյունքում։ Սկսնակները նայում են, թե ինչ աշխատանքի հայտարարություններ կան կամ այս պահին ինչ դասընթացներ կան տարբեր ուսումնական կենտրոններում և ընտրում են լեզու կամ մասնագիտացում, որն ըստ իրենց շատ կարճ ժամանակահատվածում կբերի անհավանական հարստության և ծրագրավորման աշխարհում չտեսնված համբավի։'),
				IMG('ծրագրավորման-մասնագիտացումներ.png'),
				PR('Կան նաև այլք, որոնք ոգևորված են արհեստական բանականությամբ և մեքենայական ուսուցմամբ, տվյալագիտությամբ և գայթակղիչ աշխատավարձերով ու նախագծերով և գերարագ ցանկանում են մասնագիտանալ այդ ոլորտներում ու արագ որոնումների արդյունքում չգիտես՝ ինչու հանգում են Python լեզվի դասընթացի ընտրությանը՝ անտեսելով ամենակարևոր բաղկացուցիչը՝ մաթեմատիկան։'),
				HT('Ի՞նչ անել մինչև մասնագիտացում ընտրելը'),
				PR('Այսպես, մինչև որևէ մասնագիտացման ընտրությունը, սկսնակ ծրագրավորողներին խիստ ու կտրականապես անհրաժեշտ է ընկղմվել հենց համակարգչային գիտության մեջ (Computer Science), որտեղ չկան Python-ներ և JavaScript-ներ, այլ կան բազմաթիվ՝ երբեմն ձանձրալի թվացող ոլորտներ, որոնց կիրառական օգտակարությունը հաճախ կամ ակնհայտ չէ, կամ համալսարաններում դասախոսները թերանում են ցուցադրել կիրառական կարևորությունը։ Սա վերաբերում է թե՜ համակարգչային ճարտարապետությանը, թե՛ համակարգային ծրագրավորմանը, թե՛ մաթեմատիկային։ Կարևորագույն ոլորտներ կամ գիտություններ, որոնք աչքաթող են արվում, իսկ դասախոսների կողմից դրանց կարևորությունը քարոզելու փոխարեն, արդյունքում տեսնում ենք միայն գործատուների դժգոհ նամակները սոցիալական ցանցերում, թե «սկսնակների մեջ չկան բավարար տաղանդներ, իսկ փորձառու ծրագրավորողների մոտ միայն աշխատանքային տարիների քանակն է շատանում»։ Մասամբ սա ճիշտ է, բայց բոլորս ունենք դրանում մեղավորություն, և՛ շուկան իր «շատ շտապ պատվերներով», որոնք իրականացնելու համար բարձր աշխատավարձերով գործատուն ստիպված ընդունում է արագ պատճենող կոդ գրողների, և՛ խորը ինժեներական գիտելիքներով հարուստ ավագ մասնագետները, որոնք չունեն ներկայացման և Computer Science-ի կարևորությունը քարոզելու նվազագույն ունակություններ։ Արդյունքում բոլորը դժգոհ են, իսկ տուժում են սկսնակները, որոնք պարզապես տեղյակ չէին, թե ինչով է տարբերվում իրական ինժեներ-ծրագրավորողը փոխարինելի մասնագետից։'),
				PR('Ինչևէ, մինչև կոնկրետ ենթամասնագիտացման ընտրությունը, խիստ կարևոր է սուզվել հենց համակարգչային գիտության մեջ, ինչքան էլ սկզբում դա ձանձրալի լինի։ Հետևյալ թեմաները ծայրահեղ կարևոր են բոլոր ծրագրավորողների համար.'),
				PL([
					'Համակարգչային ճարտարապետություն',
					'Օպերացիոն համակարգեր և համակարգային ծրագրավորում',
					'Ալգորիթմներ և տվյալների կառուցվածքներ',
					'Ծրագրային ապահովման նախագծման մեթոդներ, մոտեցումներ և սկզբունքներ',
				]),
				PR('Կհայտնվեն, իհարկե, բազմաքանակ ծրագրավորողներ, որոնք այժմ աշխատում են ոլորտում ու կպնդեն, որ համակարգչային գիտության տեսական ուսումնասիրությունը բացարձակ անհրաժեշտ չէ, բայց սկսնակները թող չմոլորվեն բիզնես մտածելակերպով օժտված մենեջերների կարծիքներից։ Առհասարակ, ցանկալի է բիզնես մտածելակերպը չխառնել իրական ինժեներության հետ։ Կարևոր է ճիշտ շեշտադրել առաջնահերթությունը. արդյո՞ք դուք ուզում եք շուտ և շատ գումար աշխատել, թե՞ սիրելով ծրագրավորումը՝ դառնալ անփոխարինելի մասնագետ, ում համար գումար աշխատելը կդառնա լռելյայն բխող արդյունք։ Մենք կողմ ենք երկրորդ տարբերակին։ Այսպես, կարող եք հետևել այս հոդվածին (հղումը կտեղադրվի հոդվածը հրապարակելուց առաջ)՝ լավ ծրագրավորող դառնալու քայլերին հետևելու համար։ Դրանից հետո համեցեք այստեղ՝ տեսնելու, թե նշված ենթամասնագիտացումներից որն է ամենագրավիչը ձեզ համար։'),
				HT('Frontend վեբ ծրագրավորող'),
				IMG('frontend-վեբ-ծրագրավորում.png'),
				PR('Frontend և backend գաղափարները արմատացած են մասնավորապես վեբ ծրագրավորման ենթաոլորտում, սակայն շատ ծրագրային փաթեթներում առանձնացվում են frontend և backend հասկացությունները։ Օրինակ՝ կոմպիլյատորների ծրագրավորման մեջ frontend հատվածը կոդի վերլուծությունն ու շարահյուսական ստուգումներն են, մինչդեռ backend-ը՝ կոդի գեներացիան և օպտիմիզացիան։ Մեծամասամբ frontend-ի տակ կհասկանանք այն հատվածը, որին անմիջապես առնչվում է օգտագործողը՝ լինի դա գրաֆիկական ինտերֆեյսի տեսքով, թե սահմանված ֆորմատով տվյալների փոխանցմամբ։ Վեբ աշխարհում frontend հատվածը այն ամենն է ինչ երևում և կատարվում է անմիջապես վեբ բրաուզերում։'),
				PR('Այստեղ կարևոր է հստակեցնել տեխնոլոգիաները, որոնց այս կամ այն չափով առնչվում են frontend վեբ ծրագրավորողները։ Մասնավորապես, իհարկե, խոսքը գնում է HTML և CSS-ի մասին, որոնց նվիրված բազմաթիվ տեսադասեր կան համացանցում՝ գրեթե բոլոր լեզուներով։ Սրանք համեմատաբար ավելի դյուրին են տրվում բոլոր սկսնակներին, ինչի պատճառով էլ սկսնակների ու ինքնուսների գերակշռող մասն առնչվել է այս տեխնոլոգիաների հետ։ Վեբ կայքերի տեսքի և կառուցման հիմքում լինելով՝ HTML-ն ու CSS-ը հնարավորություն են տալիս կազմակերպել և գունազարդել վեբ կայքերը, մինչդեռ որևէ պարզ ծրագրավորման լեզու է անհրաժեշտ, որպեսզի այդ կայքերը ունենան դինամիկություն՝ արձագանքելով օգտագործողների մուտքագրած տվյալներին։ Այդ դինամիկությունն ապահովող լեզուներից ամենատարածվածը JavaScript-ն է, առանց որի frontend վեբ ծրագրավորողները չեն պատկերացնում իրենց առօրյան։'),
				PR('Ժամանակի ընթացքում, ինչ-որ ժամանակահատված frontend վեբ ծրագրավորողները կամա թե ակամա սկսում են ստեղծել կամ օգտագործել ֆրեյմվորկ՝ անընդհատ կրկնվող ծրագրային լուծումներն ավելի կոկիկ արտահայտելու համար։ Վեբ աշխարհում տարածված ֆրեյմվորկներից են Angular-ը, React-ը և Vue-ն։ Վստահ ենք՝ այս հոդվածի հրապարակումից հետո կհայտնվեն այլ ֆրեյմվորկներ ևս։'),
				HT('Ի՞նչ է կարևոր իմանալ լավ frontend վեբ ծրագրավորող դառնալու համար'),
				PR('Կարևոր է լավ խորությամբ հասկանալ այն հասկացությունները, որոնց հետ առնչվում է frontend վեբ ծրագրավորողը աշխատանքի ընթացքում. այն է՝'),
				PL([
					'Բրաուզերի աշխատանքի մանրամասները՝ ինչպես է “render” արվում վեբ կայքի բովանդակությունը, ինչպես է համագործակցում JavaScript-ի հետ, ինչ է և ինչպես օգտագործել DOM-ը։',
					'JavaScript-ի շարժիչի (օրինակ՝ v8) աշխատանքի մանրամասները։',
					'Բազմահոսք ծրագրավորման հիմունքները և Web workers կիրառությունները։',
					'Ասինխրոն ծրագրավորման հիմունքները, այդ թվում event-ների մշակումն ու ցանցային ասինխրոն հարցումները։ Այս գործում կարևոր է նաև հենց JavaScript-ի շարժիչի և բրաուզերի համագործակցության եզրերը պատկերացնելն ու հասկանալը։',
					'Ընտրված ֆրեյմվորկի մանրամասներն ու վեբ հավելվածների մշակման շաբլոններն ու հակաշաբլոնները։ Այդ թվում ծրագրային ապահովման նախագծման, ճարտարապետության և կազմակերպման մեթոդներն ու մոտեցումները։',
					'HTTP արձանագրության ներքին աշխատանքային մանրամասները, այդ թվում՝ փոխանցվող տվյալների տեսակներն ու ֆորմատը։',
					'Ցանցային ծրագրավորման մանրամասներ՝ սոկետների օգտագործմամբ։ Վեբ աշխարհում գերակշռող են հենց WebSockets-ը, բայց ցանկալի է frontend վեբ ծրագրավորողն իմանա նաև ցածր մակարդակի սոկետների ու ցանցի աշխատանքի մանրամասներ։',
				]),
				PR('Frontend վեբ ծրագրավորողն ի վիճակի է ստեղծել այն ամենն ինչ դուք տեսնում եք առօրյայում՝ այցելելով զանազան վեբ կայքեր։ Facebook, Netflix, Wikipedia և ցանկացած այլ կայքերի տեսքի և դինամիկության պատասխանատուն հենց frontend վեբ ծրագրավորողներն են։'),
				PR('<a href="https://picsart.academy/">Picsart Academy-ում</a> բացի այն, որ հիմունքային համակարգչային գիտության դասընթացներն առաջնային են ցանկացած ենթամասնագիտացումից առաջ, կան նաև հստակ հաջորդականությամբ սահմանված դասեր՝ հենց լավագույն frontend վեբ ծրագրավորող դառնալու համար։ Այստեղ չեն անտեսվում և բավարար ուշադրության են արժանանում խորքային այնպիսի թեմաներ, ինչպիսիք են ասինխրոն և բազմահոսք ծրագրավորումը, ցանցային ծրագրավորումը և մնացած վերոնշյալ թեմաները։'),
				HT('Backend վեբ ծրագրավորող'),
				IMG('backend-վեբ-ծրագրավորող.png'),
				PR('Backend վեբ ծրագրավորողն արդեն զբաղվում է տվյալների ստացման, մշակման և պահպանման էֆեկտիվ միջոցներով։ Այն բոլոր վեբ և մոբայլ ծառայությունները, որոնք օգտվում են կենտրոնացված սերվերներից՝ այս կամ այն չափով կախված են հենց backend վեբ ծրագրավորողից։ Լինի դա instagram-ի նկարների վերբեռնումը, facebook-ի հրապարակման մեկնաբանությունը, Google Search-ի որոնման արդյունքների ցուցադրությունը, և ցանկացած այլ գործառույթ, առանց backend համակարգի սրանք և շատ այլ գործառույթներ չեն աշխատի։ Այս գործում տեսականորեն էական չէ, թե ինչ ծրագրավորման լեզու կօգտագործվի։ Հաճախ տվյալների մշակման գործում backend վեբ ծրագրավորողը կարող է կիրառել մի քանի ծրագրավորման լեզուներ։'),
				PR('Ամենատարածված ծրագրավորման լեզուները backend աշխարհում՝ JavaScript (Node.js միջավայրով), PHP, Java, C#, Kotlin և Go լեզուներն են։ Կան շատ backend համակարգեր, որտեղ միաժամանակ օգտագործվում են այս լեզուներից մի քանիսը, օրինակ՝ API տրամադրման և սպասարկման համար կարող է օգտագործվել Node.js (JavaScript), իսկ շարունակական գործընթացների կամ տվյալների երկարատև մշակման համար՝ Java։ Երբեմն լեզուներից կոնկրետ մեկն է օգտագործվում բոլոր սցենարների համար։ Տեխնոլոգիաների և լեզուների ընտրությունը մեծապես կախված է ընկերությունից, թիմի ունակություններից և թիմի առջև դրված խնդիրներից։'),
				HT('Ի՞նչ է կարևոր իմանալ լավ backend վեբ ծրագրավորող դառնալու համար'),
				PR('Backend վեբ ծրագրավորողի համար առավել կարևոր է տիրապետել հասկացությունների ու գործիքների, որոնք անկախ ծրագրավորման լեզվից կիրառվում և օգտագործվում են ցանկացած backend ենթահամակարգ մշակելիս, մասնավորապես.'),
				PL([
					'Տվյալների բազաների համակարգեր։ Տվյալների բազաների համակարգերը տարանջատում են ըստ մոտեցման, շատերն օգտվում են ռելացիոն տվյալների բազաներից, ինչպես օրինակ՝ MySQL, MSSQL և այլն, մյուսներն օգտագործում են NoSQL լուծումներ, օրինակ՝ MongoDB, Neo4j, և այլն։ Իհարկե, երկու դեպքում էլ կարևոր է ծրագրավորողի առջև դրված խնդիրները։ Այստեղ կարող են դիտարկվել նաև քեշավորման համակարգեր, ինչպիսիք են Redis-ը կամ Memcached-ը։',
					'API նախագծման ունակություններ, մասնավորապես՝ REST API նախագծման լավագույն պրակտիկաների ակտիվ կիրառություն։ backend վեբ ծրագրավորողի համար կարևոր է լինել կոկիկ տրամադրվող API-ների նախագծման հարցում։',
					'Ցանցային ծրագրավորման մանրամասները backend վեբ ծրագրավորողին ևս անհրաժեշտ են։ backend վեբ ծրագրավորողը չի սահմանափակվում HTTP արձանագրությամբ, այլ երբեմն նաև ստիպված է ծանոթանալ ավելի ցածր մակարդակի արձանագրությունների, որովհետև ցանցային հաղորդակցությունը backend վեբ ծրագրավորողի համար առաջնային է ցանկացած գործիքակազմի օգտագործման դեպքում՝ լինի դա տվյալների բազաների համակարգ, թե միկրոսերվիսների ճարտարապետությունում օգտագործվող տրանսպորտի միջոց։',
					'Ալգորիթմներ և տվյալների կառուցվածքներ իմանալը միանշանակ կարևոր է backend վեբ ծրագրավորողին, որովհետև տվյալների ստացման, տրամադրման, մշակման և պահպանման հարցում խիստ կարևոր է ամեն ինչ անել արագ, անվտանգ և էֆեկտիվ։ Այստեղ կարևոր են նաև ծրագրային ապահովման նախագծման, ճարտարապետության և կազմակերպման մեթոդներն ու մոտեցումները։',
					'Ցանկալի է հստակ պատկերացնել ծրագրային ապահովման տեղակայման, սերվերային սարքավորումների աշխատանքի և մոնիթորինգի միջոցների մասին։ Որոշ առումով backend ծրագրավորողը նաև թաթախվում է DevOps մասնագիտացմանը բնորոշող խնդիրների մեջ։',
					'Առավել բարդ հասկացություններն արդեն ժամանակի և աշխատանքային փորձի հարց են, որոնց backend վեբ ծրագրավորողը կառնչվի, եթե նախագծերի և գործատուի հարցում բախտը բերի։ Հասկացություններից են ընդլայնումը (scaling), տվյալների ճարտարապետության կազմակերպման մոտեցումները, որոնք ներառում են նաև sharding, replication և այլ միջոցներ։',
				]),
				PR('<a href="https://picsart.academy/">Picsart Academy-ում</a>, ինչպես արդեն նշեցինք, բացի հիմունքային համակարգչային գիտության դասընթացներից, որոնք խիստ կարևոր են բոլոր ծրագրավորողների համար, կան նաև հստակ հաջորդականությամբ սահմանված դասեր՝ հենց լավագույն backend վեբ ծրագրավորող դառնալու համար։ Այստեղ չեն անտեսվում և բավարար ուշադրություն է դարձվում խորքային այնպիսի թեմաներին, ինչպիսիք են տվյալների բազաների համակարգերի աշխատանքի մանրամասները, ասինխրոն և բազմահոսք ծրագրավորումը, ցանցային ծրագրավորումը և մնացած վերոնշյալ թեմաները։'),
				HT('Android ծրագրավորող կամ Android հավելվածների մշակող'),
				IMG('android-ծրագրավորող-android-ծրագրավորում.png'),
				PR('Հիմունքային կրթության անհրաժեշտությունն առանց բացառության վերաբերում է թե՛ Android հավելվածների ծրագրավորողին, թե՛ iOS ծրագրավորողներին՝ առանց բացառության։ Այստեղ միայն կնշենք այն կարևոր հասկացությունները, որոնք Android ծրագրավորողն օգտագործում է աշխատանքի մեջ.'),
				PL([
					'Java կամ Kotlin ծրագրավորման լեզուներից որևէ մեկը։ Android հավելվածները երկար ժամանակ իրականացվել են Java ծրագրավորման լեզվով, որը վերջին տարիներին ակտիվ փոխարինվում է Kotlin-ով։ Kotlin-ն ու Java-ն համատեղելի են, բայց Android հավելվածների նորեկ ծրագրավորողներին խորհուրդ է տրվում բավարար մակարդակով տիրապետել Java-ին ևս, քանի որ երբեմն արդեն իսկ գոյություն ունեցող հավելվածների սպասարկման համար ծրագրավորողները ստիպված են առնչվել հենց Java կոդի հետ։',
					'Պարտադիր է նաև ամբողջությամբ պատկերացնել Android հավելվածի ստեղծման փուլերն ու բաղկացուցիչները։ Ծրագրավորողը պետք է հստակ պատկերացնի բոլոր հասկացությունները, այդ թվում՝ Intent-ները, Activity-ները, Service-ները և այլն։ Այստեղ ձեզ կօգնի պաշտոնական դոկումենտացիան, որից հաճախակի օգտվելու եք գործնական առաջադրանքների կատարման ժամանակ։',
					'Ցանկալի է նաև լավ կողմնորոշվել տվյալների հետ աշխատանքի գործիքներում ու մեխանիզմներում։ Հավելվածները շատ հաճախ օգտագործում են տեղային (local) տվյալների բազաների համակարգեր, օրինակ՝ SQLite։ Տվյալների հետ աշխատանքի, մոդելավորման և մշակման հարցում անհրաժեշտ է ծանոթ լինել վերջին լավագույն պրակտիկաներին, սկզբունքներին և մեթոդներին։',
					'Հաճախ Android ծրագրավորողները առնչվում են ցանցային հարցումների հետ։ Մասնավորապես, կարիք է լինում հարցումներ ուղարկել backend ծրագրավորողների կողմից մշակված և տրամադրվող API-ներին, ինչպես նաև կազմակերպել ավելի ցածր մակարդակի ցանցային հաղորդակցություն։ Սրանց մեջ լավ կողմնորոշվելու համար ցանկալի է բավարար իմացություն ցանցային ծրագրավորման և սոկետների մասին, կողմնորոշվել տվյալների ֆորմատների մեջ, օգտագործել էֆեկտիվ միջոցներ ու գրադարաններ՝ ստացված տվյալների մշակման համար։',
					'Վերջում, պակաս կարևոր չէ նաև գեոլոկացիայի տվյալների հետ աշխատանքը, push notification-ների հետ աշխատանքը, ինչպես նաև canvas-ի հետ աշխատանքը, որը կարող է բերել հետաքրքիր նկարչական կամ նկարների մշակման հավելվածների ստեղծմանը, ինչպիսին է օրինակ Picsart-ը։',
				]),
				HT('iOS ծրագրավորող կամ iOS հավելվածների մշակող'),
				IMG('ios-ծրագրավորում-ios-ծրագրավորող.png'),
				PR('iOS ծրագրավորողի պահանջները որոշ իմաստով համընկնում են Android ծրագրավորողի պահանջների հետ։ Հիմնական տարբերություններն ընկած են անմիջապես մոբայլ հարթակի առանձնահատկությունների մեջ։ iOS հարթակում հիմնական օգտագործվող ծրագրավորման լեզուն հենց Apple ընկերության կողմից աջակցվող Swift լեզուն է, որն անհամեմատելի հեշտ է ադապտացնելը սկսնակների համար, քան Objective-C-ն։ Լավագույն iOS ծրագրավորող դառնալու համար, իհարկե, ցանկալի է բավարար տիրապետել նաև հենց Objective-C լեզվին, որովհետև դեռևս կան բազմաթիվ սպասարկման ենթակա ծրագրեր, որոնք իրականացվել են Objective-C-ով։'),
				PR('Բացի դա, երբեմն ծրագրավորողները որոշ ծրագրերի դեպքում կտոր-կտոր թարգմանում են նախկին գրված Objective-C կոդը Swift-ի, ինչը ևս պահանջում է Objective-C-ի իմացություն։ iOS ծրագրավորման աշխարհ մուտք գործելու համար, սակայն այս պահին բավարար է միայն Swift-ը (չհաշված, իհարկե, հիմունքային համակարգչային գիտության կարևոր ոլորտների իմացությունը)։'),
				PL([
					'Կարևոր է նաև գործիքակազմի լավ տիրապետումը, այդ թվում՝ Storyboard և Interface Builder, ինչպես նաև գործիքներ և հասկացություններ, ինչպիսիք են Auto Layout, Responsive UI (user interface, օգտագործողի ինտերֆեյս)։ Կան որոշ պահանջներ, որոնք անհրաժեշտ է բավարարել iOS հավելվածներ մշակելիս, կապված հենց օգտագործողի ինտերֆեյսի հետ։ Այստեղ իհարկե օգտակար է հենց Apple ընկերության պաշտոնական դոկումենտացիային ծանոթանալը։',
					'Ցանկալի է նաև լավ կողմնորոշվել տվյալների հետ աշխատանքի գործիքներում ու մեխանիզմներում։ Հավելվածները շատ հաճախ օգտագործում են տեղային (local) տվյալների բազաների համակարգեր, օրինակ՝ SQLite։ Տվյալների հետ աշխատանքի, մոդելավորման և մշակման հարցում անհրաժեշտ է ծանոթ լինել վերջին լավագույն պրակտիկաներին, սկզբունքներին և մեթոդներին։ iOS հավելվածների մշակողներն ակտիվ օգտագործում են Apple-ի կողմից տրամադրվող Core Data ֆրեյմվորկը։',
					'Հաճախ iOS ծրագրավորողները առնչվում են ցանցային հարցումների հետ։ Մասնավորապես, կարիք է լինում հարցումներ ուղարկել backend ծրագրավորողների կողմից մշակված և տրամադրվող API-ներին, ինչպես նաև կազմակերպել ավելի ցածր մակարդակի ցանցային հաղորդակցություն։ Սրանց մեջ լավ կողմնորոշվելու համար ցանկալի է բավարար իմացություն ցանցային ծրագրավորման և սոկետների մասին, կողմնորոշվել տվյալների ֆորմատների մեջ, օգտագործել էֆեկտիվ միջոցներ ու գրադարաններ ստացված տվյալների մշակման համար։',
					'Վերջում, պակաս կարևոր չէ նաև գեոլոկացիայի տվյալների հետ աշխատանքը, push notification-ների հետ աշխատանքը, ինչպես նաև canvas-ի հետ աշխատանքը, որը կարող է բերել հետաքրքիր նկարչական կամ նկարների մշակման հավելվածների ստեղծմանը, ինչպիսին է օրինակ Picsart-ը։',
				]),
				HT('Այլ մասնագիտացումներ'),
				PR('Այստեղ բաց ենք թողնում AI, ML, Data Science ոլորտներ/ենթաոլորտները, որովհետև հոդվածը նախատեսված է անմիջապես սկսնակների ծրագրավորման համար։ AI, ML, Data Science-ում խիստ կարևոր է միայն ու միայն մաթեմատիկան։ Խորը մաթեմատիկական գիտելիքների բացակայության պարագայում, լավագույն դեպքում ձեզ կվստահեն նշված ոլորտի ամենաձանձրալի առաջադրանքները։ Հաջորդ հոդվածներում կմանրամասնենք հենց AI, ML, Data Science ոլորտները ևս, իսկ մինչ այդ կներկայացնենք առանձին հոդվածով DevOps մասնագիտացումը, որը շատերի կողմից դեռևս չունի հստակ սահմաններ։'),
				PR('Հոդվածում բերված բոլոր մասնագիտացումները՝ հստակ պլանով և բավարար խորությամբ, գործնական և տեսական երկարատև դասընթացների տեսքով անցկացվում են <a href="https://picsart.academy/">Picsart Academy-ում</a> տարեկան մի քանի անգամ։'),
			]
		},
		{
			id: 3, title: 'Ինչպե՞ս սովորել գրել կոդ. խորհուրդներ սկսնակներին ', content: [
				HT('Հմտանալ և կարողանալ վարժ գրել կոդ. խորհուրդներ սկսնակներին'),
				YT('https://www.youtube.com/embed/Xsmukpo-lVM'),
				PR('Մինչև կոդ գրելու խորհուրդներին անցնելը, առաջարկում ենք նաև դիտել տեսանյութ, որը կօգնի կենտրոնանալ ծրագրավորում սովորելու քայլերի վրա։'),
				YT('https://www.youtube.com/embed/RyDckCn28Yc'),
				PR('Սկսնակ ծրագրավորողները սովորաբար դժվարանում են առաջին անգամ կոդ գրելուց։ Այստեղ կարևոր է, որ սկսնակը կարողանա ժամանակավոր աբստրակտացվի կոդ գրելու նրբություններից, օրինակ՝ դիտարկենք հետևյալ C++ կոդը։'),
				IMG('cpp-կոդի-օրինակ.png'),
				PR('Սա պարզագույն կոդ է C++-ով, որն էկրանին է տպում “Hello, Picsart Academy!” արտահայտությունը։ Եթե սկսնակները փորձեն բոլոր մանրամասներով պատկերացնել, թե ինչպես է աշխատում կոդը և մաս առ մաս հասկանան կոդի ցանկացած կտոր, ապա կխճճվեն և կոդի տրամաբանության հիմնական կտորներին ավելի ուշ կհասնեն։ Կան իհարկե լեզուներ, որոնք հնարավորություն են տալիս ավելի արագ անցնել հենց կոդի տրամաբանությանն ու բաղկացուցիչներին։ Այս իմաստով, C++-ը բարդ է սկսնակների համար, մինչդեռ Python-ը կամ JavaScript-ը շատ ավելի հեշտ են։ Նույն կոդի օրինակը JavaScript-ով կունենա այս տեսքը.'),
				IMG('js-կոդի-օրինակ.png'),
				PR('Python-ով նույնը էլ ավելի «մարդամոտ» է.'),
				IMG('python-կոդի-օրինակ.png'),
				PR('Այս հոդվածում կփորձենք դիտարկել քայլեր և խորհուրդներ, որոնք կօգնեն սկսնակներին հնարավորինս արագ սկսել գրել կոդ։'),
				HT('Խորհուրդ 1 - Հասկացեք ձեր ընտրած լեզվի կոդի կոմպիլյացիան և կատարումը'),
				PR('Լեզվից կախված՝ կոդի կոմպիլյացիայի և կատարման մոդելը կարող է փոփոխվել։ Եթե դուք բացարձակ սկսնակ եք, ապա պետք է առաջին հերթին իմանաք, որ կոդը ընդամենը տեքստ է և այն ծրագիր դարձնելու համար անհրաժեշտ է կոմպիլացնել (compile), որի արդյունքում տեքստից գեներացվում է այնպիսի ֆայլ, որը համակարգիչը կարող է դիտարկել որպես ծրագիր։ Կախված լեզվից՝ կոմպիլյացիայի և կատարման գործընթացը կարող է տարբերվել։'),
				IMG('խորհուրդ-հասկացեք-կոդի-կոմպիլյացիան.png'),
				PR('C++-ի դեպքում կոդը պետք է կոմպիլացնել, որպեսզի ստանաք կատարվող ֆայլ (executable file), այսինքն՝ ծրագիր։ Ծրագիրը կատարելու համար կոմպիլյատորն այլևս անհրաժեշտ չէ, իսկ այլ լեզուների դեպքում, օրինակ՝ Python, անհրաժեշտ է տեղադրել «վիրտուալ մեքենա», որը ոչ միայն կկոմպիլացնի Python-ի ծրագիրը, այլ նաև կկատարի կոմպիլացված արդյունքը, այլ կերպ ասած՝ կինտերպրետացնի։ Ընդամենը հիմունքներն իմանալով՝ հնարավոր է անցում կատարել անմիջապես կոդը գրելուն։ Եթե նույնիսկ դժվարանաք տեղադրել համապատասխան կոմպիլյատորը, ինտերպրետատորը կամ վիրտուալ մեքենան (կախված ձեր ընտրած լեզվից), ապա միշտ կարող եք օգտվել առցանց տարբերակներից, օրինակ՝ https://replit.com/languages/cpp ։'),
				HT('Խորհուրդ 2 - Հնարավորինս արագ իրականացրեք “Hello, world!”-ը'),
				IMG('hello-world.png'),
				PR('“Hello, world!”-ը համառոտ ասում ենք ծրագրին, որն էկրանին արտածում է “Hello, world!” արտահայտությունը։ Սա պատմականորեն հայտնի արտահայտություն է ծրագրավորման ասպարեզում, և գրեթե բոլոր ծրագրավորողների առաջին իսկ ծրագիրն էկրանին արտածել է «բարև, աշխարհ»-ը՝ “Hello, world!”։ Փորձեք հնարավորինս արագ ձեր ընտրած լեզվով գրել, կոմպիլացնել և կատարել (աշխատեցնել) ծրագիր, որն էկրանին կարտածի “Hello, world!” կամ ցանկած այլ տեքստ։'),
				HT('Խորհուրդ 3 - Ծանոթացեք փոփոխականներին'),
				IMG('ծանոթացեք-փոփոխականներին.png'),
				PR('Սրանք արկղիկներ են, որտեղ պահպանվում են տվյալները, իսկ տվյալները ցանկացած ծրագրի կարևոր բաղկացուցիչներից են։ Picsart Academy-ում թերևս ամենաշատ կրկնվող արտահայտությունն է. «Ծրագիրը բաղկացած է տվյալներից և ինստրուկցիաներից»։ Տվյալները կոդում արտահայտվում են փոփոխականների տեսքով՝ որպես արկղեր, որտեղ պահպանվում են արժեքներ՝ հետագա օգտագործման համար։ Արժեքների ներկայացումը կարող է լինել տարատեսակ, օրինակ՝ թվեր կամ տեքստ։ Այս տեսակներին ծրագրավորման լեզուներում անվանում են տվյալների տիպեր։ Երբ դուք օգտագործում եք արկղիկները՝ փոփոխականները, որտեղ պահպանվում են արժեքներ, անհրաժեշտ է նաև սահմանել արկղերի տեսակները՝ ըստ պահպանվող տվյալների տեսակի։ Այսպես էլ առաջացել են տվյալների տիպերն ու դրանց հետաքրքիր անվանումները տարբեր ծրագրավորման լեզուներում, օրինակ՝ int, double, long և այլն։'),
				HT('Խորհուրդ 4 - Ցանկալի է սկսել C-ից կամ C++-ից'),
				IMG('սկսել-c-լեզվից.png'),
				PR('Ինչպես հոդվածներից մեկում նշել ենք, ծրագրավորման լեզուն կարևոր չէ, եթե սկսնակը ջանասիրաբար սովորի անմիջապես Computer Science (համակարգչային գիտություն)։ Ցավալիորեն շատ դեպքերում Computer Science-ը չի բարձրաձայնվում որպես շատ կարևոր ուղղություն, այլ անմիջապես շեշտը դրվում է որևէ տարածված ծրագրավորման լեզվի վրա, օրինակ՝ JavaScript կամ Python։ Սկսնակները լսելով անընդհատ այդ լեզուների անունները՝ ակամա մտածում են, որ ծրագրավորում սովորելու համար անհրաժեշտ է սովորել JavaScript կամ Python։ Եթե կա լեզվի ընտրության հնարավորություն, ապա մենք միանշանակ խորհուրդ ենք տալիս C կամ C++-ից սկսել, որովհետև այդ լեզուները ստիպում են սկսնակին անհանգստանալ ցածր մակարդակի որոշակի դետալների մասին, որոնք չեն երևում JavaScript, Python կամ նմանտիպ լեզուներում։ Օրինակ՝ աշխատանքը հիշողության հետ, ցուցիչները, փոփոխականների գտնվելու վայրը, ֆունկցիաներին արժեքներ փոխանցելու տեսակները, ֆունկցիաների գերբեռնումը, զանգվածների ներկայացումը, տողերի կազմակերպման տեսակները և մի շարք այլ հասկացություններ, որոնք Python և JavaScript լեզուներում այնքան պարզ ու հասանելի են կազմակերպված, որ սկսնակը ակամայից չի հասկանում, թե ինչպես են դրանք աշխատում, հետևաբար շարունակում է աբստրակտացված լինել անմիջապես համակարգչային համակարգերից ու դրանց աշխատանքի կարևոր սկզբունքներից, որոնք էլ Computer Science-ի կարևորագույն բաղկացուցիչներից են։ Մինչդեռ C/C++-ում սկսնակը ստիպված է վերոնշյալ և շատ այլ հասկացություններ խորությամբ պատկերացնել, այլապես գրված կոդը չի աշխատի կամ չի աշխատի այնպես, ինչպես անհրաժեշտ է։ Այդ ուսման պրոցեսի ընթացքում սկսնակը ստիպված սկսում է թաթախվել որոշ չափով հենց Computer Science-ի մեջ։'),
				HT('Խորհուրդ 5 - Արագ սկսեք կիրառել if, if-else, while, for և զանգվածներ'),
				IMG('արագ-օգտագործեք-if-else.png'),
				PR('Շատ կարևոր է երկար չտվայտվել հիմունքների վրա և ուշ սկսել սովորել պայմանական գործողությունները, փոխարենը՝ հնարավորինս արագ սկսել կիրառել if/while/for և նմանատիպ կառուցվածքներ։ Սրանք են հենց ծրագրավորման առաջին թարմ շունչը, որը ստանում է սկսնակը, երբ սկսում է ծանոթանալ լեզվի շարահյուսությանը։ Հենց սկսնակը կիրառում է պայմանների ստուգում և ցիկլեր, իր առջև սկսում են բացվել ծրագրավորման յուրօրինակ աշխարհի դռները։'),
				HT('Խորհուրդ 6 - Մի խուսափեք բարդ հասկացություններից'),
				IMG('ագրեգատներ-ֆունկցիաներ-կլասներ.png'),
				PR('Տվյալների ագրեգատներ, ֆունկցիաներ, լամբդաներ, կլասներ և այլն։ Սրանք համեմատաբար բարդ տրվող հասկացություններ են, որոնք սկսնակին խիստ անհրաժեշտ են, բայց շատ դեպքերում սկսնակները խուսափում են և շարունակում լուծել նույն պարզ խնդիրները, որոնք մինչ այդ ստացվել են իրենց մոտ։ Փորձեք անընդհատ փորփրել կոդի օրինակներ, գրել ինքնուրույն՝ անգամ երբեմն ամբողջությամբ չհասկանալով։'),
				HT('Խորհուրդ 7 - Գրեք կոդ ամեն օր'),
				IMG('գրել-կոդ-ամեն-օր.png'),
				PR('Առանց բացառության. ցանկացած բաց թողված օր սկսնակներին հետ է գցում մի քանի շաբաթով։ Անհրաժեշտ է ամեն օր, թեկուզ մեկ կամ երկու ժամ նստել համակարգչի դիմաց և կոդ հավաքել։ Ցանկալի է, իհարկե, լուծել նոր խնդիրներ ամեն օր, բայց կարելի է նաև լուծել նույն խնդիրները, որոնք լուծել եք նախորդ օրերին։ Հորինեք փոքր նախագծեր և փորձեք ինքնուրույն իրականացնել դրանք։ Խորհուրդը շատ կարևոր է՝ բաց չթողնել ոչ մի օր։'),
				PR('Պրակտիկ հմտությունները լավացնելուց հետո կարող եք դիմել նաև <a href="https://picsart.academy/code-republic-lab">Code Republic Lab</a>, <a href="https://picsart.academy/">Picsart Academy-ի</a> նախագծերի ստեղծման և զարգացման բաժին, որտեղ հնարավորություն ունեք անցնել բազմաթիվ պրակտիկայի ծրագրեր (internship)։'),
			]
		},
		{
			id: 4, title: 'Ի՞նչ սովորել մրցունակ Frontend վեբ ծրագրավորող դառնալու համար', content: [
				HT('Ի՞նչ սովորել մրցունակ frontend վեբ ծրագրավորող դառնալու համար'),
				PR('Մինչև կոնկրետ ենթամասնագիտացման ընտրությունը, խիստ կարևոր է սուզվել հենց համակարգչային գիտության մեջ, ինչքան էլ սկզբում դա ձանձրալի լինի։ Հետևյալ թեմաները ծայրահեղ կարևոր են բոլոր ծրագրավորողների համար.'),
				PL([
					'Համակարգչային ճարտարապետություն',
					'Օպերացիոն համակարգեր և համակարգային ծրագրավորում',
					'Ալգորիթմներ և տվյալների կառուցվածքներ',
					'Ծրագրային ապահովման նախագծման մեթոդներ, մոտեցումներ և սկզբունքներ',
				]),
				PR('Կհայտնվեն, իհարկե, բազմաքանակ ծրագրավորողներ, որոնք այժմ աշխատում են ոլորտում ու կպնդեն, որ համակարգչային գիտության տեսական ուսումնասիրությունը բացարձակ անհրաժեշտ չէ, բայց սկսնակները թող չմոլորվեն բիզնես մտածելակերպով օժտված մենեջերների կարծիքներից։ Առհասարակ, ցանկալի է բիզնես մտածելակերպը չխառնել իրական ինժեներության հետ։ Կարևոր է ճիշտ շեշտադրել առաջնահերթությունը. արդյո՞ք դուք ուզում եք շուտ և շատ գումար աշխատել, թե՞ սիրելով ծրագրավորումը՝ դառնալ անփոխարինելի մասնագետ, ում համար գումար աշխատելը կդառնա լռելյայն բխող արդյունք։ Մենք կողմ ենք երկրորդ տարբերակին։ Այսպես, կարող եք հետևել այս հոդվածին (հղումը կտեղադրվի հոդվածը հրապարակելուց առաջ)՝ լավ ծրագրավորող դառնալու քայլերին հետևելու համար։ Դրանից հետո համեցեք այստեղ՝ տեսնելու, թե նշված ենթամասնագիտացումներից որն է ամենագրավիչը ձեզ համար։'),
				HT('Frontend վեբ ծրագրավորող'),
				IMG('frontend-վեբ-ծրագրավորում.png'),
				PR('Frontend և backend գաղափարները արմատացած են մասնավորապես վեբ ծրագրավորման ենթաոլորտում, սակայն շատ ծրագրային փաթեթներում առանձնացվում են frontend և backend հասկացությունները։ Օրինակ՝ կոմպիլյատորների ծրագրավորման մեջ frontend հատվածը կոդի վերլուծությունն ու շարահյուսական ստուգումներն են, մինչդեռ backend-ը՝ կոդի գեներացիան և օպտիմիզացիան։ Մեծամասամբ frontend-ի տակ կհասկանանք այն հատվածը, որին անմիջապես առնչվում է օգտագործողը՝ լինի դա գրաֆիկական ինտերֆեյսի տեսքով, թե սահմանված ֆորմատով տվյալների փոխանցմամբ։ Վեբ աշխարհում frontend հատվածը այն ամենն է ինչ երևում և կատարվում է անմիջապես վեբ բրաուզերում։'),
				PR('Այստեղ կարևոր է հստակեցնել տեխնոլոգիաները, որոնց այս կամ այն չափով առնչվում են frontend վեբ ծրագրավորողները։ Մասնավորապես, իհարկե, խոսքը գնում է HTML և CSS-ի մասին, որոնց նվիրված բազմաթիվ տեսադասեր կան համացանցում՝ գրեթե բոլոր լեզուներով։ Սրանք համեմատաբար ավելի դյուրին են տրվում բոլոր սկսնակներին, ինչի պատճառով էլ սկսնակների ու ինքնուսների գերակշռող մասն առնչվել է այս տեխնոլոգիաների հետ։ Վեբ կայքերի տեսքի և կառուցման հիմքում լինելով՝ HTML-ն ու CSS-ը հնարավորություն են տալիս կազմակերպել և գունազարդել վեբ կայքերը, մինչդեռ որևէ պարզ ծրագրավորման լեզու է անհրաժեշտ, որպեսզի այդ կայքերը ունենան դինամիկություն՝ արձագանքելով օգտագործողների մուտքագրած տվյալներին։ Այդ դինամիկությունն ապահովող լեզուներից ամենատարածվածը JavaScript-ն է, առանց որի frontend վեբ ծրագրավորողները չեն պատկերացնում իրենց առօրյան։'),
				PR('Ժամանակի ընթացքում, ինչ-որ ժամանակահատված frontend վեբ ծրագրավորողները կամա թե ակամա սկսում են ստեղծել կամ օգտագործել ֆրեյմվորկ՝ անընդհատ կրկնվող ծրագրային լուծումներն ավելի կոկիկ արտահայտելու համար։ Վեբ աշխարհում տարածված ֆրեյմվորկներից են Angular-ը, React-ը և Vue-ն։ Վստահ ենք՝ այս հոդվածի հրապարակումից հետո կհայտնվեն այլ ֆրեյմվորկներ ևս։'),
				HT('Ի՞նչ է կարևոր իմանալ լավ frontend վեբ ծրագրավորող դառնալու համար'),
				PR('Կարևոր է լավ խորությամբ հասկանալ այն հասկացությունները, որոնց հետ առնչվում է frontend վեբ ծրագրավորողը աշխատանքի ընթացքում. այն է՝'),
				PL([
					'Բրաուզերի աշխատանքի մանրամասները՝ ինչպես է “render” արվում վեբ կայքի բովանդակությունը, ինչպես է համագործակցում JavaScript - ի հետ, ինչ է և ինչպես օգտագործել DOM - ը։',
					'JavaScript - ի շարժիչի(օրինակ՝ v8) աշխատանքի մանրամասները։',
					'Բազմահոսք ծրագրավորման հիմունքները և Web workers կիրառությունները։',
					'Ասինխրոն ծրագրավորման հիմունքները, այդ թվում event - ների մշակումն ու ցանցային ասինխրոն հարցումները։ Այս գործում կարևոր է նաև հենց JavaScript - ի շարժիչի և բրաուզերի համագործակցության եզրերը պատկերացնելն ու հասկանալը։',
					'Ընտրված ֆրեյմվորկի մանրամասներն ու վեբ հավելվածների մշակման շաբլոններն ու հակաշաբլոնները։ Այդ թվում ծրագրային ապահովման նախագծման, ճարտարապետության և կազմակերպման մեթոդներն ու մոտեցումները։',
					'HTTP արձանագրության ներքին աշխատանքային մանրամասները, այդ թվում՝ փոխանցվող տվյալների տեսակներն ու ֆորմատը։',
					'Ցանցային ծրագրավորման մանրամասներ՝ սոկետների օգտագործմամբ։ Վեբ աշխարհում գերակշռող են հենց WebSockets - ը, բայց ցանկալի է frontend վեբ ծրագրավորողն իմանա նաև ցածր մակարդակի սոկետների ու ցանցի աշխատանքի մանրամասներ։',
				]),
				PR('Frontend վեբ ծրագրավորողն ի վիճակի է ստեղծել այն ամենն ինչ դուք տեսնում եք առօրյայում՝ այցելելով զանազան վեբ կայքեր։ Facebook, Netflix, Wikipedia և ցանկացած այլ կայքերի տեսքի և դինամիկության պատասխանատուն հենց frontend վեբ ծրագրավորողներն են։'),
				PR('<a href="https://picsart.academy/">Picsart Academy-ում</a> բացի այն, որ հիմունքային համակարգչային գիտության դասընթացներն առաջնային են ցանկացած ենթամասնագիտացումից առաջ, կան նաև հստակ հաջորդականությամբ սահմանված դասեր՝ հենց լավագույն frontend վեբ ծրագրավորող դառնալու համար։ Այստեղ չեն անտեսվում և բավարար ուշադրության են արժանանում խորքային այնպիսի թեմաներ, ինչպիսիք են ասինխրոն և բազմահոսք ծրագրավորումը, ցանցային ծրագրավորումը և մնացած վերոնշյալ թեմաները։'),
				PR('<a href="./ծրագրավորման-մասնագիտացումները.html"></a>Հոդվածների շարքում նկարագրվող բոլոր մասնագիտացումները՝ հստակ պլանով և բավարար խորությամբ, գործնական և տեսական երկարատև դասընթացների տեսքով անցկացվում են <a href="https://picsart.academy/">Picsart Academy-ում</a> տարեկան մի քանի անգամ։'),
			]
		},
		{
			id: 5, title: 'Ի՞նչ սովորել մրցունակ Backend վեբ ծրագրավորող դառնալու համար', content: [
				HT('Ի՞նչ սովորել մրցունակ backend վեբ ծրագրավորող դառնալու համար'),
				PR('Մինչև կոնկրետ ենթամասնագիտացման ընտրությունը, խիստ կարևոր է սուզվել հենց համակարգչային գիտության մեջ, ինչքան էլ սկզբում դա ձանձրալի լինի։ Հետևյալ թեմաները ծայրահեղ կարևոր են բոլոր ծրագրավորողների համար.'),
				PL([
					'Համակարգչային ճարտարապետություն',
					'Օպերացիոն համակարգեր և համակարգային ծրագրավորում',
					'Ալգորիթմներ և տվյալների կառուցվածքներ',
					'Ծրագրային ապահովման նախագծման մեթոդներ, մոտեցումներ և սկզբունքներ',
				]),
				PR('Կհայտնվեն, իհարկե, բազմաքանակ ծրագրավորողներ, որոնք այժմ աշխատում են ոլորտում ու կպնդեն, որ համակարգչային գիտության տեսական ուսումնասիրությունը բացարձակ անհրաժեշտ չէ, բայց սկսնակները թող չմոլորվեն բիզնես մտածելակերպով օժտված մենեջերների կարծիքներից։ Առհասարակ, ցանկալի է բիզնես մտածելակերպը չխառնել իրական ինժեներության հետ։ Կարևոր է ճիշտ շեշտադրել առաջնահերթությունը. արդյո՞ք դուք ուզում եք շուտ և շատ գումար աշխատել, թե՞ սիրելով ծրագրավորումը՝ դառնալ անփոխարինելի մասնագետ, ում համար գումար աշխատելը կդառնա լռելյայն բխող արդյունք։ Մենք կողմ ենք երկրորդ տարբերակին։ Այսպես, կարող եք հետևել այս հոդվածին (հղումը կտեղադրվի հոդվածը հրապարակելուց առաջ)՝ լավ ծրագրավորող դառնալու քայլերին հետևելու համար։ Դրանից հետո համեցեք այստեղ՝ տեսնելու, թե նշված ենթամասնագիտացումներից որն է ամենագրավիչը ձեզ համար։'),
				HT('Backend վեբ ծրագրավորող'),
				IMG('backend-վեբ-ծրագրավորող.png'),
				PR('Backend վեբ ծրագրավորողն արդեն զբաղվում է տվյալների ստացման, մշակման և պահպանման էֆեկտիվ միջոցներով։ Այն բոլոր վեբ և մոբայլ ծառայությունները, որոնք օգտվում են կենտրոնացված սերվերներից՝ այս կամ այն չափով կախված են հենց backend վեբ ծրագրավորողից։ Լինի դա instagram-ի նկարների վերբեռնումը, facebook-ի հրապարակման մեկնաբանությունը, Google Search-ի որոնման արդյունքների ցուցադրությունը, և ցանկացած այլ գործառույթ, առանց backend համակարգի սրանք և շատ այլ գործառույթներ չեն աշխատի։ Այս գործում տեսականորեն էական չէ, թե ինչ ծրագրավորման լեզու կօգտագործվի։ Հաճախ տվյալների մշակման գործում backend վեբ ծրագրավորողը կարող է կիրառել մի քանի ծրագրավորման լեզուներ։'),
				PR('Ամենատարածված ծրագրավորման լեզուները backend աշխարհում՝ JavaScript (Node.js միջավայրով), PHP, Java, C#, Kotlin և Go լեզուներն են։ Կան շատ backend համակարգեր, որտեղ միաժամանակ օգտագործվում են այս լեզուներից մի քանիսը, օրինակ՝ API տրամադրման և սպասարկման համար կարող է օգտագործվել Node.js (JavaScript), իսկ շարունակական գործընթացների կամ տվյալների երկարատև մշակման համար՝ Java։ Երբեմն լեզուներից կոնկրետ մեկն է օգտագործվում բոլոր սցենարների համար։ Տեխնոլոգիաների և լեզուների ընտրությունը մեծապես կախված է ընկերությունից, թիմի ունակություններից և թիմի առջև դրված խնդիրներից։'),
				HT('Ի՞նչ է կարևոր իմանալ լավ backend վեբ ծրագրավորող դառնալու համար'),
				PR('Backend վեբ ծրագրավորողի համար առավել կարևոր է տիրապետել հասկացությունների ու գործիքների, որոնք անկախ ծրագրավորման լեզվից կիրառվում և օգտագործվում են ցանկացած backend ենթահամակարգ մշակելիս, մասնավորապես.'),
				PL([
					'Տվյալների բազաների համակարգեր։ Տվյալների բազաների համակարգերը տարանջատում են ըստ մոտեցման, շատերն օգտվում են ռելացիոն տվյալների բազաներից, ինչպես օրինակ՝ MySQL, MSSQL և այլն, մյուսներն օգտագործում են NoSQL լուծումներ, օրինակ՝ MongoDB, Neo4j, և այլն։ Իհարկե, երկու դեպքում էլ կարևոր է ծրագրավորողի առջև դրված խնդիրները։ Այստեղ կարող են դիտարկվել նաև քեշավորման համակարգեր, ինչպիսիք են Redis - ը կամ Memcached - ը։',,
					'API նախագծման ունակություններ, մասնավորապես՝ REST API նախագծման լավագույն պրակտիկաների ակտիվ կիրառություն։ backend վեբ ծրագրավորողի համար կարևոր է լինել կոկիկ տրամադրվող API - ների նախագծման հարցում։',,
					'Ցանցային ծրագրավորման մանրամասները backend վեբ ծրագրավորողին ևս անհրաժեշտ են։ backend վեբ ծրագրավորողը չի սահմանափակվում HTTP արձանագրությամբ, այլ երբեմն նաև ստիպված է ծանոթանալ ավելի ցածր մակարդակի արձանագրությունների, որովհետև ցանցային հաղորդակցությունը backend վեբ ծրագրավորողի համար առաջնային է ցանկացած գործիքակազմի օգտագործման դեպքում՝ լինի դա տվյալների բազաների համակարգ, թե միկրոսերվիսների ճարտարապետությունում օգտագործվող տրանսպորտի միջոց։',,
					'Ալգորիթմներ և տվյալների կառուցվածքներ իմանալը միանշանակ կարևոր է backend վեբ ծրագրավորողին, որովհետև տվյալների ստացման, տրամադրման, մշակման և պահպանման հարցում խիստ կարևոր է ամեն ինչ անել արագ, անվտանգ և էֆեկտիվ։ Այստեղ կարևոր են նաև ծրագրային ապահովման նախագծման, ճարտարապետության և կազմակերպման մեթոդներն ու մոտեցումները։',,
					'Ցանկալի է հստակ պատկերացնել ծրագրային ապահովման տեղակայման, սերվերային սարքավորումների աշխատանքի և մոնիթորինգի միջոցների մասին։ Որոշ առումով backend ծրագրավորողը նաև թաթախվում է DevOps մասնագիտացմանը բնորոշող խնդիրների մեջ։',,
					'Առավել բարդ հասկացություններն արդեն ժամանակի և աշխատանքային փորձի հարց են, որոնց backend վեբ ծրագրավորողը կառնչվի, եթե նախագծերի և գործատուի հարցում բախտը բերի։ Հասկացություններից են ընդլայնումը(scaling), տվյալների ճարտարապետության կազմակերպման մոտեցումները, որոնք ներառում են նաև sharding, replication և այլ միջոցներ։',,
				]),
				PR('<a href="https://picsart.academy/">Picsart Academy-ում</a>, բացի հիմունքային համակարգչային գիտության դասընթացներից, որոնք խիստ կարևոր են բոլոր ծրագրավորողների համար, կան նաև հստակ հաջորդականությամբ սահմանված դասեր՝ հենց լավագույն backend վեբ ծրագրավորող դառնալու համար։ Այստեղ չեն անտեսվում և բավարար ուշադրություն է դարձվում խորքային այնպիսի թեմաներին, ինչպիսիք են տվյալների բազաների համակարգերի աշխատանքի մանրամասները, ասինխրոն և բազմահոսք ծրագրավորումը, ցանցային ծրագրավորումը և մնացած վերոնշյալ թեմաները։'),
				PR('<a href="./ծրագրավորման-մասնագիտացումները.html"></a>Հոդվածների շարքում նկարագրվող բոլոր մասնագիտացումները՝ հստակ պլանով և բավարար խորությամբ, գործնական և տեսական երկարատև դասընթացների տեսքով անցկացվում են <a href="https://picsart.academy/">Picsart Academy-ում</a> տարեկան մի քանի անգամ։'),
			]
		},
	],
};

// add trends
DB.trends.push(DB.posts[3]);
DB.trends.push(DB.posts[1]);
DB.trends.push(DB.posts[2]);
DB.trends.push(DB.posts[0]);

module.exports = { DB, postTypes };